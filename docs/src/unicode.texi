@node unicode shortcuts,extra buffers,cedille mode commands,Top
@include version.texi
@chapter unicode

Here is a very short survey of the Unicode symbols used in Cedille, together
with the shortcut to type them in the emacs mode.

@table @command

@item \l
Produces Œª (lambda), for anonymous functions

@item \L
Produces Œõ (capital lambda), for anonymous functions taking in compile-time arguments (erased at run-time)

@item \r
Produces ‚Üí (right arrow)

@item \a
Produces ‚àÄ (forall), for quantification over terms which are erased at run-time, and also over type-level expressions

@item \P
Produces Œ† (capital pi), for dependent function types and for all type-level quantification (even over types)

@item \s
Produces ‚òÖ (black star), the kind of types

@item \.
Produces ¬∑ (center dot), for applying a function (term- or type-level) to a type-level argument

@item \f
Produces ‚óÇ (leftwards double arrow), for checking a term against a type, or type against a kind, at the top-level

@item \h
Produces ‚óè (black circle), a hole representing a missing subterm

@item \k
Produces ùíå (math bold italic small k). All kind-level defined symbols must start with this character.

@item \i
Produces Œπ (iota), for dependent intersections

@item \=
Produces ‚âÉ (asymptotically equal to), for propositional equality

@item \b
Produces Œ≤ (beta), for proving propositional equalities which follow just by beta-eta reduction

@item \e
Produces Œµ (epsilon), for reducing the sides of an equation

@item \R
Produces œÅ (rho), for rewriting with an equation

@item \F
Produces œÜ (phi), for proving that if t ‚âÉ t', and t has type T, then t' also has type T

@item \y
Produces œÇ (lowercase final sigma), for proving t ‚âÉ t' from t' ‚âÉ t.

@item \t
Produces Œ∏ (theta), for elimination with a motive (of McBride)

@item \x
Produces œá (chi), for changing the form of the expected or computed classifier to a definitionally equivalent one

@item \c
Produces œÉ (sigma), for pattern matching on a term

@item \m
Produces Œº (mu), for recursive definitions over an expression

@end table
